{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { CardFooter, Button, IconButton } from \"@material-tailwind/react\";\nimport { AuthContext } from \"../services/account.service\";\nimport \"../App.css\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AllOrder() {\n  _s();\n  const [currentPage, setCurrentPage] = useState(1);\n  const {\n    getOrderByUser\n  } = useContext(AuthContext);\n  const [order, setOrder] = useState(null);\n  useEffect(() => {\n    const fetchUserInfo = async () => {\n      const data = await getOrderByUser();\n      setOrder(data.orders);\n    };\n    fetchUserInfo();\n  }, [getOrderByUser]);\n  console.log(\"order\", order);\n  const recordsPerPage = 7;\n  const lastIndex = currentPage * recordsPerPage;\n  const firstIndex = lastIndex - recordsPerPage;\n  // const currentData = order.slice(firstIndex, lastIndex);\n  const npage = Math.ceil(order.length / recordsPerPage);\n  const numbers = [...Array(npage + 1).keys()].slice(1);\n  const prePage = () => {\n    if (currentPage !== firstIndex) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n  const changePage = id => {\n    setCurrentPage(id);\n  };\n  const nextPage = () => {\n    if (currentPage !== lastIndex) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(AllOrder, \"ZVJjmXOiZB0Os7q+BdAoBxWW5e0=\");\n_c = AllOrder;\nvar _c;\n$RefreshReg$(_c, \"AllOrder\");","map":{"version":3,"names":["React","useEffect","useState","useContext","CardFooter","Button","IconButton","AuthContext","Fragment","_Fragment","jsxDEV","_jsxDEV","AllOrder","_s","currentPage","setCurrentPage","getOrderByUser","order","setOrder","fetchUserInfo","data","orders","console","log","recordsPerPage","lastIndex","firstIndex","npage","Math","ceil","length","numbers","Array","keys","slice","prePage","changePage","id","nextPage","_c","$RefreshReg$"],"sources":["C:/Users/Evans/Desktop/dashboard-fimat/client/src/components-two/AllOrder.jsx"],"sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport { CardFooter, Button, IconButton } from \"@material-tailwind/react\";\r\nimport { AuthContext } from \"../services/account.service\";\r\nimport \"../App.css\";\r\n\r\nexport default function AllOrder() {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const { getOrderByUser } = useContext(AuthContext);\r\n  const [order, setOrder] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchUserInfo = async () => {\r\n      const data = await getOrderByUser();\r\n      setOrder(data.orders);\r\n    };\r\n    fetchUserInfo();\r\n  }, [getOrderByUser]);\r\n\r\n  console.log(\"order\",order);\r\n\r\n  const recordsPerPage = 7;\r\n  const lastIndex = currentPage * recordsPerPage;\r\n  const firstIndex = lastIndex - recordsPerPage;\r\n // const currentData = order.slice(firstIndex, lastIndex);\r\n  const npage = Math.ceil(order.length / recordsPerPage);\r\n  const numbers = [...Array(npage + 1).keys()].slice(1);\r\n\r\n  const prePage = () => {\r\n    if (currentPage !== firstIndex) {\r\n      setCurrentPage(currentPage - 1);\r\n    }\r\n  };\r\n\r\n  const changePage = (id) => {\r\n    setCurrentPage(id);\r\n  };\r\n\r\n  const nextPage = () => {\r\n    if (currentPage !== lastIndex) {\r\n      setCurrentPage(currentPage + 1);\r\n    }\r\n  };\r\n\r\n  return <>\r\n   {\r\n    \r\n   }\r\n  </>;\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAC9D,SAASC,UAAU,EAAEC,MAAM,EAAEC,UAAU,QAAQ,0BAA0B;AACzE,SAASC,WAAW,QAAQ,6BAA6B;AACzD,OAAO,YAAY;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpB,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM;IAAEc;EAAe,CAAC,GAAGb,UAAU,CAACI,WAAW,CAAC;EAClD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,MAAMkB,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,MAAMC,IAAI,GAAG,MAAMJ,cAAc,EAAE;MACnCE,QAAQ,CAACE,IAAI,CAACC,MAAM,CAAC;IACvB,CAAC;IACDF,aAAa,EAAE;EACjB,CAAC,EAAE,CAACH,cAAc,CAAC,CAAC;EAEpBM,OAAO,CAACC,GAAG,CAAC,OAAO,EAACN,KAAK,CAAC;EAE1B,MAAMO,cAAc,GAAG,CAAC;EACxB,MAAMC,SAAS,GAAGX,WAAW,GAAGU,cAAc;EAC9C,MAAME,UAAU,GAAGD,SAAS,GAAGD,cAAc;EAC9C;EACC,MAAMG,KAAK,GAAGC,IAAI,CAACC,IAAI,CAACZ,KAAK,CAACa,MAAM,GAAGN,cAAc,CAAC;EACtD,MAAMO,OAAO,GAAG,CAAC,GAAGC,KAAK,CAACL,KAAK,GAAG,CAAC,CAAC,CAACM,IAAI,EAAE,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC;EAErD,MAAMC,OAAO,GAAGA,CAAA,KAAM;IACpB,IAAIrB,WAAW,KAAKY,UAAU,EAAE;MAC9BX,cAAc,CAACD,WAAW,GAAG,CAAC,CAAC;IACjC;EACF,CAAC;EAED,MAAMsB,UAAU,GAAIC,EAAE,IAAK;IACzBtB,cAAc,CAACsB,EAAE,CAAC;EACpB,CAAC;EAED,MAAMC,QAAQ,GAAGA,CAAA,KAAM;IACrB,IAAIxB,WAAW,KAAKW,SAAS,EAAE;MAC7BV,cAAc,CAACD,WAAW,GAAG,CAAC,CAAC;IACjC;EACF,CAAC;EAED,oBAAOH,OAAA,CAAAF,SAAA,oBAIJ;AACL;AAACI,EAAA,CA3CuBD,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}